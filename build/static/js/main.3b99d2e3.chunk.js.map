{"version":3,"sources":["media/symbol-defs.svg","services/persons.js","components/Notification.js","components/PersonForm.js","App.js","index.js"],"names":["module","exports","base","axios","get","then","response","data","newObject","post","id","delete","object","put","Notification","message","className","PersonForm","handleSubmit","nameState","handleOnChangeName","numberState","handleOnChangeNumber","notification","onSubmit","htmlFor","name","value","placeholder","onChange","type","FilterInput","handleChange","ShowPerson","number","xlinkHref","icons","ShowData","filter","map","person","toLowerCase","includes","toString","key","console","log","length","Boolean","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterValue","setFilterValue","setMessage","useEffect","personsService","initialData","e","target","preventDefault","personObject","parseInt","clearInputValues","clearMessageInterval","setTimeout","test","isNewSubmitDuplicate","verification","returnedPerson","concat","document","querySelector","classList","add","catch","err","alert","newPersonId","window","confirm","records","onClick","idToRemove","parentElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b99d2e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/symbol-defs.9622dd4d.svg\";","import axios from \"axios\"\r\n\r\nconst base = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(base)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addNewPerson = newObject =>{\r\n    const request = axios.post(base, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteRecord = id =>{\r\n    const request = axios.delete(`${base}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, object) =>{\r\n    const request = axios.put(`${base}/${id}`, object)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nexport default {getAll, addNewPerson, deleteRecord, updatePerson}\r\n","import React from \"react\";\r\nimport './Notification.css'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message) {\r\n        return (\r\n            <div className={'notification'}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst PersonForm =  ({handleSubmit, nameState, handleOnChangeName, numberState, handleOnChangeNumber, notification}) =>{\r\n    return(\r\n        <form id={\"testerino\"} onSubmit={handleSubmit}>\r\n            <div className={\"formContainer\"}>\r\n                <div className={\"name_container\"}>\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input\r\n                        name=\"name\"\r\n                        value={nameState}\r\n                        placeholder={\"introduce new name\"}\r\n                        onChange={handleOnChangeName}\r\n                        className={\"input\"}\r\n                    />\r\n                </div>\r\n                <div className={\"phone_input_container\"}>\r\n                    <label htmlFor=\"phoneNumber\">Phone number:</label>\r\n                    <input\r\n                        name=\"phoneNumber\"\r\n                        value={numberState}\r\n                        placeholder={\"10 digits number\"}\r\n                        onChange={handleOnChangeNumber}\r\n                        className={\"input\"}\r\n                    />\r\n                </div>\r\n\r\n                <button className={'btn mt-small'} type=\"submit\">Add</button>\r\n                <Notification message={notification} />\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react'\r\nimport personsService from \"./services/persons\";\r\nimport icons from './media/symbol-defs.svg'\r\nimport PersonForm from \"./components/PersonForm\";\r\n\r\nconst FilterInput = ({handleChange,  value}) =>{\r\n    return (\r\n    <div>\r\n        <label htmlFor=\"filter\">Filter:</label>\r\n        <input\r\n            value={value} onChange={handleChange} name={\"filter\"} type=\"text\" className={\"input\"} placeholder={\"By name or number\"}/>\r\n    </div>\r\n    )\r\n}\r\nconst ShowPerson = ({name, number, id}) =>{\r\n    return (\r\n\r\n        <tr className={`${id} data-row`}>\r\n            <td className={'data-field'}>{name}</td>\r\n            <td className={'data-field'}>{number}</td>\r\n            <td className={'delete-field'}>\r\n                <div className={'icon-container'}>\r\n                    <div className={'filler'}> </div>\r\n                    <svg className=\"icon-trash\">\r\n                        <use xlinkHref={`${icons}#icon-bin`} />\r\n                    </svg>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n}\r\nconst ShowData = ({data, filter=false}) => {\r\n\r\n    if (filter){\r\n        return (\r\n            data.map(person => person.name.toLowerCase().includes(filter.toLowerCase()) || person.number.toString().includes(filter.toString()) ? <ShowPerson key={person.name} name={person.name} number={person.number} id={person.id}/> : null)\r\n        )\r\n    }\r\n\r\n    if (data){\r\n        console.log(data, data.length, typeof data, Boolean(data.length))\r\n        return data.map(person =>  <ShowPerson key={person.name} name={person.name} number={person.number} id={person.id} />);\r\n    }\r\n    return null;\r\n}\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filterValue, setFilterValue]  = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() =>{\r\n       personsService.getAll().then(initialData => {\r\n           setPersons(initialData)\r\n       })\r\n    }, [])\r\n    const handleInputName = (e) =>{\r\n        setNewName(e.target.value);\r\n    }\r\n    const handleInputNumber = (e) =>{\r\n        setNewNumber(e.target.value);\r\n    }\r\n    const handleFiltering = e =>{\r\n        setFilterValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const personObject = {\r\n            name: newName,\r\n            number: parseInt(newNumber)\r\n        }\r\n\r\n        const clearInputValues = () =>{\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n            return 1;\r\n        }\r\n\r\n        const clearMessageInterval = () =>{\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 5000)\r\n        }\r\n\r\n\r\n        const numberPatternRegex = /^[0-9]{10}$/;\r\n        if (!numberPatternRegex.test(newNumber)){\r\n            alert(`Number must be only 10 digits and no special characters`);\r\n            return;\r\n        }\r\n        const isNewSubmitDuplicate = () =>{\r\n            // return 1 if new name is duplicate, 2 if new phone number is duplicate\r\n            let verification = []\r\n            persons.map(person => verification += person.name === newName);\r\n            if (verification.includes(true)){\r\n                return 1;\r\n            }\r\n            persons.map(person => verification += person.number.toString() === newNumber);\r\n            if (verification.includes(true)){\r\n                return 2;\r\n            }\r\n        }\r\n        if (isNewSubmitDuplicate() === 1){\r\n            const getNewPersonId = () =>{\r\n                const oldPersonObject = persons.filter(person => person.name === newName)\r\n                return oldPersonObject[0].id;\r\n            }\r\n\r\n            const newPersonId = getNewPersonId();\r\n\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n                personsService.updatePerson(newPersonId, personObject).then(records => {\r\n                    setPersons(persons.map(person => person.id.toString() !== newPersonId.toString() ? person : personObject))\r\n                    clearInputValues();\r\n                }).catch(err => {\r\n                    setMessage('Failed to update record because it has been deleted')\r\n                    document.querySelector('.notification').classList.add('error')\r\n                    clearMessageInterval();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        if (isNewSubmitDuplicate() === 2) {\r\n            alert(`${newNumber} is already added to phonebook`);\r\n            return;\r\n        }\r\n\r\n\r\n        personsService.addNewPerson(personObject).then(returnedPerson =>{\r\n            setPersons(persons.concat(returnedPerson))\r\n            clearInputValues();\r\n            setMessage('New contact added successfully')\r\n            document.querySelector('.notification').classList.add('success');\r\n            clearMessageInterval();\r\n        }).catch(err => {\r\n            setMessage(err)\r\n            document.querySelector('.notification').classList.add('error')\r\n            clearMessageInterval();\r\n            }\r\n        )\r\n\r\n    }\r\n    const handleTable = e =>{\r\n        const idToRemove = e.target.parentElement.parentElement.parentElement.classList[0];\r\n        personsService.deleteRecord(idToRemove).then(data => {\r\n            setPersons(persons.filter(person => person.id.toString() !== idToRemove))\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <PersonForm\r\n                nameState={newName}\r\n                handleOnChangeName={handleInputName}\r\n                numberState={newNumber}\r\n                handleOnChangeNumber={handleInputNumber}\r\n                handleSubmit={handleSubmit}\r\n                notification={message}\r\n            />\r\n            <div className={'numbers'}>\r\n                <h2>Numbers</h2>\r\n                <FilterInput value={filterValue} handleChange={handleFiltering} />\r\n                <table onClick={handleTable}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={'tb-header'}>Name</th><th className={'tb-header'}>Phone Number</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <ShowData data={persons} filter={filterValue} />\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport  './scss/styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}